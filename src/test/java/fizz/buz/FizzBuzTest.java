/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package fizz.buz;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;

import static org.junit.jupiter.api.Assertions.*;

class FizzBuzTest {

    @ParameterizedTest
    @ValueSource(ints = {1, 8, 41})
    void should_report_as_number_when_count_is_normal_case(int number) {
        FizzBuz fizzBuz = new FizzBuz();

        String answer = fizzBuz.count(number);

        assertEquals(String.valueOf(number), answer);
    }

    @ParameterizedTest
    @ValueSource(ints = {3, 6, 9})
    void should_be_said_fiz_when_count_is_3_times(int number) {
        FizzBuz fizzBuz = new FizzBuz();

        String answer = fizzBuz.count(number);

        assertEquals("Fizz", answer);
    }

    @ParameterizedTest
    @ValueSource(ints = {5, 10, 40})
    void should_be_said_Buzz_when_count_is_5_times(int number) {
        FizzBuz fizzBuz = new FizzBuz();

        String answer = fizzBuz.count(number);

        assertEquals("Buzz", answer);
    }

    @ParameterizedTest
    @ValueSource(ints = {7, 14, 49})
    void should_be_said_Whizz_when_count_is_7_times(int number) {
        FizzBuz fizzBuz = new FizzBuz();

        String answer = fizzBuz.count(number);

        assertEquals("Whizz", answer);
    }

    @ParameterizedTest
    @ValueSource(ints = {15, 45, 75})
    void should_be_said_FizzBuzz_when_count_is_same_as_3_and_5_times(int number) {
        FizzBuz fizzBuz = new FizzBuz();

        String answer = fizzBuz.count(number);

        assertEquals("FizzBuzz", answer);
    }

    @ParameterizedTest
    @ValueSource(ints = {21, 63})
    void should_be_said_FizzBuzz_when_count_is_same_as_3_and_7_times(int number) {
        FizzBuz fizzBuz = new FizzBuz();

        String answer = fizzBuz.count(number);

        assertEquals("FizzWhizz", answer);
    }

    @Test
    void should_be_said_FizzBuzz_when_count_is_same_as_3_and_5_and_7_times() {
        FizzBuz fizzBuz = new FizzBuz();

        String answer = fizzBuz.count(105);

        assertEquals("FizzBuzzWhizz", answer);
    }
}
